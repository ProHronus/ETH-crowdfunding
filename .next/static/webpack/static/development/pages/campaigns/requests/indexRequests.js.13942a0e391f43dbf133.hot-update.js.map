{"version":3,"file":"static/webpack/static\\development\\pages\\campaigns\\requests\\indexRequests.js.13942a0e391f43dbf133.hot-update.js","sources":["webpack:///./pages/campaigns/requests/indexRequests.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../../components/layout.js';\r\nimport { Grid, Table, Button, Form } from 'semantic-ui-react';\r\nimport { Link } from '../../../routes';\r\nimport campaignJS from '../../../ethereum/campaing.js';\r\nimport PropTypes from 'prop-types';\r\nimport RequestRow from '../../../components/RequestRow'\r\nimport web3JS from '../../../ethereum/web3';\r\nimport { ErrorForm } from '../../../components/ErrorForm';\r\nimport { SuccessForm } from '../../../components/SuccessForm';\r\nimport { messageStrings } from '../../../ethereum/messagestrings';\r\n\r\nlet web3;\r\n\r\nclass RequstIndex extends Component {\r\n\r\n    state = {\r\n        errorMessage: '',\r\n        btnDisabled: true\r\n    }\r\n\r\n    static async getInitialProps(props) {\r\n        const address = props.query.address;\r\n        const campaign = await campaignJS.campaignInit(address);\r\n        const requestCount = +await campaign.methods.getRequestsCount().call();\r\n        const approversCount = +await campaign.methods.approversCount().call();\r\n        web3 = await web3JS.web3Init();\r\n\r\n        const requestsRaw = await Promise.all(\r\n            Array(requestCount).fill().map((element, index) => {\r\n                return campaign.methods.requests(index).call();\r\n            })\r\n        );\r\n\r\n        const requests = requestsRaw.map((element) => {\r\n            element.approvalCount = element.approvalCount.toNumber();\r\n            element.value = web3.utils.fromWei((element.value.toString()), 'ether');\r\n            return element;\r\n        })\r\n\r\n        return {\r\n            address,\r\n            requests,\r\n            requestCount,\r\n            approversCount,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkNetwork();\r\n    }\r\n\r\n\r\n    async checkNetwork() {\r\n        let errorMessage;\r\n        try {\r\n            web3 = await web3JS.web3Init();\r\n            errorMessage = web3JS.isError();\r\n        } catch (error) {\r\n            this.setState({ errorMessage: error });\r\n        }\r\n        if (errorMessage) {\r\n            this.setState({ errorMessage: errorMessage });\r\n        } else {\r\n            this.setState({ btnDisabled: false });\r\n        }\r\n    }\r\n\r\n    renderRows() {\r\n        return this.props.requests.map((request, index) => {\r\n            return <RequestRow\r\n                key={index}\r\n                id={index}\r\n                approversCount={this.props.approversCount}\r\n                request={request}\r\n                address={this.props.address}\r\n                btnDisabled={this.state.btnDisabled}\r\n            />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>\r\n                    List of Requests\r\n                </h3>\r\n                <Link route={`/campaigns/${this.props.address}`}>\r\n                    <a>\r\n                        <Button >Back</Button>\r\n                    </a>\r\n                </Link >\r\n                <Link route={`/campaigns/${this.props.address}/requests/new`}>\r\n                    <a>\r\n                        <Button primary>\r\n                            Add Request\r\n                        </Button>\r\n                    </a>\r\n                </Link>\r\n                <Form error={!!this.state.errorMessage} warning={!!this.state.hash}>\r\n                    <ErrorForm message={this.state.errorMessage} style/>\r\n                    <SuccessForm hash={this.state.hash} confirmationNumber={this.state.confirmationNumber} />\r\n                </Form>\r\n                <Table celled>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Id</Table.HeaderCell>\r\n                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                            <Table.HeaderCell>Reciepient</Table.HeaderCell>\r\n                            <Table.HeaderCell>Approvals</Table.HeaderCell>\r\n                            <Table.HeaderCell>Approve</Table.HeaderCell>\r\n                            <Table.HeaderCell>Finalize</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.renderRows()}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Layout>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nRequstIndex.propTypes = {\r\n    address: PropTypes.string.isRequired,\r\n    requests: PropTypes.arrayOf(PropTypes.object),\r\n    approversCount: PropTypes.number.isRequired\r\n}\r\n\r\nexport default RequstIndex;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;;;;;;AA+BA;AACA;AACA;;;;;;;;;;;;;;AAMA;AACA;;AADA;AACA;;;;;;;AAEA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;AAEA;AACA;AAKA;AAAA;AAKA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAmBA;;;;;;AArGA;;;;;;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AAEA;AAEA;AACA;AACA;;AAJA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;;;;;;;AA3BA;AACA;AA8GA;AACA;AACA;AACA;AAHA;AAMA;;;;A","sourceRoot":""}